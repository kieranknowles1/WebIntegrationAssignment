openapi: "3.0.2"
info:
  title: Web Integration Assignment API
  description: |
    API for the Web Integration Assignment \
    Author: Kieran Knowles \
    Generated with assistance from GitHub Copilot
  version: "1.0"

servers:
  - url: https://w20013000.nuwebspace.co.uk/api

tags:
  - name: Content
    description: |
      Information about research content at the conference
  - name: User
    description: |
      User specific information. Requires authentication

paths:
  /developer:
    get:
      summary: Get developer information
      description: Returns name and student ID of the developer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/developerInformation"

  /country:
    get:
      tags:
        - Content
      summary: Get all countries referenced in the database
      description: |
        Returns the country names contained in the affiliation database table.
        The name of each country is returned only once
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string

  /preview:
    get:
      tags:
        - Content
      summary: Get preview videos and the title of their associated content
      description: |
        Returns links to preview videos together with the associated content title.
        Any content that does not have a preview video is not.
        The data is returned in a random order.
      parameters:
        - in: query
          name: limit
          required: false
          description: |
            Maximum number of results to return. Items will still be returned in a random order. \
            Default: infinity \
            Minimum: 1
          schema:
            type: integer
            minimum: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/preview"

  /author_and_affiliation:
    get:
      tags:
        - Content
      summary: Get authors and their affiliations
      description: |
        Returns the country, city and institution each author is affiliated with for each publication
        they are associated with. \
        For each of these affiliations the author id, author name, content id and content name
        is also returned.
        Authors can have more than one affiliation for each item of content and that authors
        can have different affiliations on different items of content. \
        Therefore, authors may have multiple records returned by this endpoint.
      parameters:
        - in: query
          name: content
          required: false
          description: |
            The id of the content to return authors for. \
            Mutually exclusive with `country`
          schema:
            type: integer
        - in: query
          required: false
          name: country
          description: |
            The name of the country to return authors for. \
            Mutually exclusive with `content`
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/affiliationInformation"

  /content:
    get:
      tags:
        - Content
      summary: Get information about all research content
      description: |
        Return information about all research content at the conference. \
        Data contains the title, the abstract, and the content type.
      parameters:
        - in: query
          name: page
          required: false
          description: |
            The 'page' of 20 results to return, after `type` is considered. \
            If not specified, all results are returned
          schema:
            type: integer
            minimum: 1
        - in: query
          name: type
          required: false
          description: |
            The type of content to return. \
            If not specified, all content is allowed
          schema:
            $ref: "#/components/schemas/contentType"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/contentFull"

components:
  schemas:
    author:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          example: John Smith

    contentBrief:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
          # TODO: Mando probably isn't the best example
          example: The Mandalorian

    contentFull:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
          # TODO: Fill in with actual title
          example: The Mandalorian
        abstract:
          type: string
          example: |
            A guy who never takes off his helmet goes on adventures with baby Yoda
            Seems pretty irresponsible to me, but what do I know?
            I guess he also adopts him and it turns out some Mandalorians put their surname first
        type:
          $ref: "#/components/schemas/contentType"

    contentType:
      enum:
        # TODO: Fill in with actual content types
        - course

    developerInformation:
      type: object
      properties:
        name:
          type: string
          example: John Smith
        student_id:
          type: string
          pattern: "w[0-9]{8}"

    preview:
      type: object
      properties:
        title:
          # TODO: Mando probably isn't the best example
          type: string
          example: The Mandalorian
        url:
          type: string
          format: uri
          example: https://www.youtube.com/watch?v=XmI7WKrAtqs

    affiliationInformation:
      type: object
      properties:
        author:
          $ref: "#/components/schemas/author"
        content:
          type: array
          items:
            $ref: "#/components/schemas/contentBrief"
